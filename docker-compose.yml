# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker Compose reference guide at
# https://docs.docker.com/go/compose-spec-reference/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose
name: platy-paste-backend
services:
  database:
    container_name: platy-paste-backend-database
    image: postgres
    restart: on-failure:3
    env_file: ".env"
    environment:
      POSTGRES_USER: ${DATABASE_USER:?error}
      POSTGRES_PASSWORD: ${DATABASE_PASS:?error}
      POSTGRES_DATABASE: ${DATABASE_DB:?error}
    expose:
      - $DATABASE_PORT:-5432
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U ${DATABASE_USER} -d ${DATABASE_DB}'"]
      interval: 10s
      timeout: 3s
      retries: 3

  minio:
    container_name: platy-paste-backend-minio
    image: quay.io/minio/minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:?error}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:?error}
    volumes:
      - ./minio-data:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s

  backend:
    container_name: platy-paste-backend
    restart: on-failure:3
    env_file: ".env"
    depends_on:
      database:
        condition: service_healthy
      minio:
        condition: service_healthy
    build:
      context: .
    ports:
      - 5454:5454
